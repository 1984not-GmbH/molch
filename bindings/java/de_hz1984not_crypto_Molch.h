/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class de_hz1984not_crypto_Molch */

#ifndef _Included_de_hz1984not_crypto_Molch
#define _Included_de_hz1984not_crypto_Molch
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     de_hz1984not_crypto_Molch
 * Method:    getMolchVersion
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_de_hz1984not_crypto_Molch_getMolchVersion
  (JNIEnv *, jobject);

/*
 * Class:     de_hz1984not_crypto_Molch
 * Method:    getMolchLastError
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_de_hz1984not_crypto_Molch_getMolchLastError
  (JNIEnv *, jobject);

/*
 * Class:     de_hz1984not_crypto_Molch
 * Method:    getNunbercrypto_box_PUBLICKEYBYTES
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_de_hz1984not_crypto_Molch_getNunbercrypto_1box_1PUBLICKEYBYTES
  (JNIEnv *, jobject);

/*
 * Class:     de_hz1984not_crypto_Molch
 * Method:    getNunberprekey_list
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_de_hz1984not_crypto_Molch_getNunberprekey_1list
  (JNIEnv *, jobject);

/*
 * Class:     de_hz1984not_crypto_Molch
 * Method:    getCONVERSATION_ID_SIZE
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_de_hz1984not_crypto_Molch_getCONVERSATION_1ID_1SIZE
  (JNIEnv *, jobject);

/*
 * Class:     de_hz1984not_crypto_Molch
 * Method:    getPREKEY_AMOUNT
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_de_hz1984not_crypto_Molch_getPREKEY_1AMOUNT
  (JNIEnv *, jobject);

/*
 * Class:     de_hz1984not_crypto_Molch
 * Method:    getBackupKeySize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_de_hz1984not_crypto_Molch_getBackupKeySize
  (JNIEnv *, jobject);

/*
 * Class:     de_hz1984not_crypto_Molch
 * Method:    getUserName
 * Signature: ([BI[BI[BI[BI)[B
 */
JNIEXPORT jbyteArray JNICALL Java_de_hz1984not_crypto_Molch_getUserName
  (JNIEnv *, jobject, jbyteArray, jint, jbyteArray, jint, jbyteArray, jint, jbyteArray, jint);

/*
 * Class:     de_hz1984not_crypto_Molch
 * Method:    getvCardInfoAvatar
 * Signature: ([BI[BI[BI)[B
 */
JNIEXPORT jbyteArray JNICALL Java_de_hz1984not_crypto_Molch_getvCardInfoAvatar
  (JNIEnv *, jobject, jbyteArray, jint, jbyteArray, jint, jbyteArray, jint);

/*
 * Class:     de_hz1984not_crypto_Molch
 * Method:    getvCardAvatar
 * Signature: ([BI)[B
 */
JNIEXPORT jbyteArray JNICALL Java_de_hz1984not_crypto_Molch_getvCardAvatar
  (JNIEnv *, jobject, jbyteArray, jint);

/*
 * Class:     de_hz1984not_crypto_Molch
 * Method:    getvCardPubKey
 * Signature: ([BI)[B
 */
JNIEXPORT jbyteArray JNICALL Java_de_hz1984not_crypto_Molch_getvCardPubKey
  (JNIEnv *, jobject, jbyteArray, jint);

/*
 * Class:     de_hz1984not_crypto_Molch
 * Method:    getvCardpreKeys
 * Signature: ([BI)[B
 */
JNIEXPORT jbyteArray JNICALL Java_de_hz1984not_crypto_Molch_getvCardpreKeys
  (JNIEnv *, jobject, jbyteArray, jint);

/*
 * Class:     de_hz1984not_crypto_Molch
 * Method:    molchCreateUserFromNativeCode
 * Signature: ([BI[BI[BI[BI)[B
 */
JNIEXPORT jbyteArray JNICALL Java_de_hz1984not_crypto_Molch_molchCreateUserFromNativeCode
  (JNIEnv *, jobject, jbyteArray, jint, jbyteArray, jint, jbyteArray, jint, jbyteArray, jint);

/*
 * Class:     de_hz1984not_crypto_Molch
 * Method:    molchDestroyUserFromNativeCode
 * Signature: ([BI[B)I
 */
JNIEXPORT jint JNICALL Java_de_hz1984not_crypto_Molch_molchDestroyUserFromNativeCode
  (JNIEnv *, jobject, jbyteArray, jint, jbyteArray);

/*
 * Class:     de_hz1984not_crypto_Molch
 * Method:    molchUserCountFromNativeCode
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_de_hz1984not_crypto_Molch_molchUserCountFromNativeCode
  (JNIEnv *, jobject);

/*
 * Class:     de_hz1984not_crypto_Molch
 * Method:    molchUserListFromNativeCode
 * Signature: ([I)[B
 */
JNIEXPORT jbyteArray JNICALL Java_de_hz1984not_crypto_Molch_molchUserListFromNativeCode
  (JNIEnv *, jobject, jintArray);

/*
 * Class:     de_hz1984not_crypto_Molch
 * Method:    molchDestroyAllUsersFromNativeCode
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_de_hz1984not_crypto_Molch_molchDestroyAllUsersFromNativeCode
  (JNIEnv *, jobject);

/*
 * Class:     de_hz1984not_crypto_Molch
 * Method:    molchGetMessageTypeFromNativeCode
 * Signature: ([BI)I
 */
JNIEXPORT jint JNICALL Java_de_hz1984not_crypto_Molch_molchGetMessageTypeFromNativeCode
  (JNIEnv *, jobject, jbyteArray, jint);

/*
 * Class:     de_hz1984not_crypto_Molch
 * Method:    molchCreateSendConversationFromNativeCode
 * Signature: ([BILjava/lang/String;I[BI[BI[BI)[B
 */
JNIEXPORT jbyteArray JNICALL Java_de_hz1984not_crypto_Molch_molchCreateSendConversationFromNativeCode
  (JNIEnv *, jobject, jbyteArray, jint, jstring, jint, jbyteArray, jint, jbyteArray, jint, jbyteArray, jint);

/*
 * Class:     de_hz1984not_crypto_Molch
 * Method:    molchCreateReceiveConversationFromNativeCode
 * Signature: ([BI[BI[BI[BI[BI)[B
 */
JNIEXPORT jbyteArray JNICALL Java_de_hz1984not_crypto_Molch_molchCreateReceiveConversationFromNativeCode
  (JNIEnv *, jobject, jbyteArray, jint, jbyteArray, jint, jbyteArray, jint, jbyteArray, jint, jbyteArray, jint);

/*
 * Class:     de_hz1984not_crypto_Molch
 * Method:    molchEncryptMessageFromNativeCode
 * Signature: (Ljava/lang/String;I[BI)[B
 */
JNIEXPORT jbyteArray JNICALL Java_de_hz1984not_crypto_Molch_molchEncryptMessageFromNativeCode
  (JNIEnv *, jobject, jstring, jint, jbyteArray, jint);

/*
 * Class:     de_hz1984not_crypto_Molch
 * Method:    molchDecryptMessageFromNativeCode
 * Signature: ([BI[BI)[B
 */
JNIEXPORT jbyteArray JNICALL Java_de_hz1984not_crypto_Molch_molchDecryptMessageFromNativeCode
  (JNIEnv *, jobject, jbyteArray, jint, jbyteArray, jint);

/*
 * Class:     de_hz1984not_crypto_Molch
 * Method:    molchEndConversationFromNativeCode
 * Signature: ([BI)[B
 */
JNIEXPORT jbyteArray JNICALL Java_de_hz1984not_crypto_Molch_molchEndConversationFromNativeCode
  (JNIEnv *, jobject, jbyteArray, jint);

/*
 * Class:     de_hz1984not_crypto_Molch
 * Method:    molchListConversationsFromNativeCode
 * Signature: ([BI)[B
 */
JNIEXPORT jbyteArray JNICALL Java_de_hz1984not_crypto_Molch_molchListConversationsFromNativeCode
  (JNIEnv *, jobject, jbyteArray, jint);

/*
 * Class:     de_hz1984not_crypto_Molch
 * Method:    molchJsonExportFromNativeCode
 * Signature: ()[B
 */
JNIEXPORT jbyteArray JNICALL Java_de_hz1984not_crypto_Molch_molchJsonExportFromNativeCode
  (JNIEnv *, jobject);

/*
 * Class:     de_hz1984not_crypto_Molch
 * Method:    molchJsonImportFromNativeCode
 * Signature: ([BI[BI[BI)I
 */
JNIEXPORT jint JNICALL Java_de_hz1984not_crypto_Molch_molchJsonImportFromNativeCode
  (JNIEnv *, jobject, jbyteArray, jint, jbyteArray, jint, jbyteArray, jint);

#ifdef __cplusplus
}
#endif
#endif
