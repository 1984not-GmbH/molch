/* This is an automatically generated bindings file. Don't modify it! */
#ifndef BOOSTLITE_BIND_BOOST_SYSTEM_ERROR_HPP
#define BOOSTLITE_BIND_BOOST_SYSTEM_ERROR_HPP

#include <boost/system/system_error.hpp>
namespace boost_lite { namespace bind { namespace boost { namespace system_error {
extern const char *boost_bindlib_in;
// begin errc
#ifdef BOOST_STL11_SYSTEM_ERROR_MAP_NO_ERRC
#undef BOOST_STL11_SYSTEM_ERROR_MAP_NO_ERRC
#else
using errc = ::boost::system::errc;
#endif
// end errc
// begin system_error
#ifdef BOOST_STL11_SYSTEM_ERROR_MAP_NO_SYSTEM_ERROR
#undef BOOST_STL11_SYSTEM_ERROR_MAP_NO_SYSTEM_ERROR
#else
using system_error = ::boost::system::system_error;
#endif
// end system_error
// begin error_code
#ifdef BOOST_STL11_SYSTEM_ERROR_MAP_NO_ERROR_CODE
#undef BOOST_STL11_SYSTEM_ERROR_MAP_NO_ERROR_CODE
#else
using error_code = ::boost::system::error_code;
#endif
// end error_code
// begin error_condition
#ifdef BOOST_STL11_SYSTEM_ERROR_MAP_NO_ERROR_CONDITION
#undef BOOST_STL11_SYSTEM_ERROR_MAP_NO_ERROR_CONDITION
#else
using error_condition = ::boost::system::error_condition;
#endif
// end error_condition
// begin is_error_condition_enum
#ifdef BOOST_STL11_SYSTEM_ERROR_MAP_NO_IS_ERROR_CONDITION_ENUM
#undef BOOST_STL11_SYSTEM_ERROR_MAP_NO_IS_ERROR_CONDITION_ENUM
#else
template<class T> using is_error_condition_enum = ::boost::system::is_error_condition_enum<T>;
#endif
// end is_error_condition_enum
// begin is_error_code_enum
#ifdef BOOST_STL11_SYSTEM_ERROR_MAP_NO_IS_ERROR_CODE_ENUM
#undef BOOST_STL11_SYSTEM_ERROR_MAP_NO_IS_ERROR_CODE_ENUM
#else
template<class T> using is_error_code_enum = ::boost::system::is_error_code_enum<T>;
#endif
// end is_error_code_enum
// begin error_category
#ifdef BOOST_STL11_SYSTEM_ERROR_MAP_NO_ERROR_CATEGORY
#undef BOOST_STL11_SYSTEM_ERROR_MAP_NO_ERROR_CATEGORY
#else
using error_category = ::boost::system::error_category;
#endif
// end error_category
// begin system_category
#ifdef BOOST_STL11_SYSTEM_ERROR_MAP_NO_SYSTEM_CATEGORY
#undef BOOST_STL11_SYSTEM_ERROR_MAP_NO_SYSTEM_CATEGORY
#else
using ::boost::system::system_category;
#endif
// end system_category
// begin generic_category
#ifdef BOOST_STL11_SYSTEM_ERROR_MAP_NO_GENERIC_CATEGORY
#undef BOOST_STL11_SYSTEM_ERROR_MAP_NO_GENERIC_CATEGORY
#else
using ::boost::system::generic_category;
#endif
// end generic_category
} } } } // namespace

#endif
