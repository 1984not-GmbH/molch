/* This is an automatically generated bindings file. Don't modify it! */
#ifndef BOOSTLITE_BIND_STD_CONDITION_VARIABLE_HPP
#define BOOSTLITE_BIND_STD_CONDITION_VARIABLE_HPP

#include <condition_variable>
namespace boost_lite { namespace bind { namespace std { namespace condition_variable {
extern const char *boost_bindlib_in;
// begin cv_status
#ifdef BOOST_STL11_CONDITION_VARIABLE_MAP_NO_CV_STATUS
#undef BOOST_STL11_CONDITION_VARIABLE_MAP_NO_CV_STATUS
#else
using ::std::cv_status;
#endif
// end cv_status
// begin condition_variable_any
#ifdef BOOST_STL11_CONDITION_VARIABLE_MAP_NO_CONDITION_VARIABLE_ANY
#undef BOOST_STL11_CONDITION_VARIABLE_MAP_NO_CONDITION_VARIABLE_ANY
#else
using condition_variable_any = ::std::condition_variable_any;
#endif
// end condition_variable_any
// begin condition_variable
#ifdef BOOST_STL11_CONDITION_VARIABLE_MAP_NO_CONDITION_VARIABLE
#undef BOOST_STL11_CONDITION_VARIABLE_MAP_NO_CONDITION_VARIABLE
#else
using condition_variable = ::std::condition_variable;
#endif
// end condition_variable
} } } } // namespace

#endif
